var data = {"bug_cases": {"BugType": "NULL pointer dereference", "Severity": 12, "CaseList": [{"HashID": "c352473fea36d19afdf3c5d9ebd0b3f8", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "3af17ad0cad284e7b1c50305be13f052.c", "FileName": "libavformat/dump.c", "Line": 644, "Tip": "Select the false branch at this point (<b>ic-&gt;nb_streams!=0</b> is false)", "SrcLines": ["", "void av_dump_format(AVFormatContext *ic, int index,", "                    const char *url, int is_output)", "{", "    int i;", "    uint8_t *printed = ic->nb_streams ? av_mallocz(ic->nb_streams) : NULL;", "    if (ic->nb_streams && !printed)", "        return;", "", "    av_log(NULL, AV_LOG_INFO, \"%s #%d, %s, %s '%s':\\n\","], "SrcStart": 639}, {"FileMD5": "3af17ad0cad284e7b1c50305be13f052.c", "FileName": "libavformat/dump.c", "Line": 644, "Tip": "<b>null</b> assigned to <b>printed</b> reaches here", "SrcLines": ["", "void av_dump_format(AVFormatContext *ic, int index,", "                    const char *url, int is_output)", "{", "    int i;", "    uint8_t *printed = ic->nb_streams ? av_mallocz(ic->nb_streams) : NULL;", "    if (ic->nb_streams && !printed)", "        return;", "", "    av_log(NULL, AV_LOG_INFO, \"%s #%d, %s, %s '%s':\\n\","], "SrcStart": 639}, {"FileMD5": "3af17ad0cad284e7b1c50305be13f052.c", "FileName": "libavformat/dump.c", "Line": 714, "Tip": "Store <b>1</b> to <b>printed[program-&gt;stream_index[i]]</b>", "SrcLines": ["                   name ? name->value : \"\");", "            dump_metadata(NULL, program->metadata, \"    \");", "            for (k = 0; k < program->nb_stream_indexes; k++) {", "                dump_stream_format(ic, program->stream_index[k],", "                                   index, is_output);", "                printed[program->stream_index[k]] = 1;", "            }", "            total += program->nb_stream_indexes;", "        }", "        if (total < ic->nb_streams)"], "SrcStart": 709}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/dump.c", "Line": 714}, {"HashID": "fa9fba938729b3dc8480a2a65571c864", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "43fbad798f514f412591761e0d3cf097.c", "FileName": "libavformat/flvdec.c", "Line": 411, "Tip": "Store <b>null</b> to <b>filepositions</b>", "SrcLines": ["{", "    FLVContext *flv       = s->priv_data;", "    unsigned int timeslen = 0, fileposlen = 0, i;", "    char str_val[256];", "    int64_t *times         = NULL;", "    int64_t *filepositions = NULL;", "    int ret                = AVERROR(ENOSYS);", "    int64_t initial_pos    = avio_tell(ioc);", "", "    if (flv->keyframe_count > 0) {"], "SrcStart": 406}, {"FileMD5": "43fbad798f514f412591761e0d3cf097.c", "FileName": "libavformat/flvdec.c", "Line": 472, "Tip": "Load value from <b>filepositions</b>", "SrcLines": ["            ret = 0;", "            break;", "        }", "    }", "", "    if (timeslen == fileposlen && fileposlen>1 && max_pos <= filepositions[0]) {", "        for (i = 0; i < FFMIN(2,fileposlen); i++) {", "            flv->validate_index[i].pos = filepositions[i];", "            flv->validate_index[i].dts = times[i] * 1000;", "            flv->validate_count        = i + 1;"], "SrcStart": 467}, {"FileMD5": "43fbad798f514f412591761e0d3cf097.c", "FileName": "libavformat/flvdec.c", "Line": 472, "Tip": "Load value from <b>*(filepositions)</b>", "SrcLines": ["            ret = 0;", "            break;", "        }", "    }", "", "    if (timeslen == fileposlen && fileposlen>1 && max_pos <= filepositions[0]) {", "        for (i = 0; i < FFMIN(2,fileposlen); i++) {", "            flv->validate_index[i].pos = filepositions[i];", "            flv->validate_index[i].dts = times[i] * 1000;", "            flv->validate_count        = i + 1;"], "SrcStart": 467}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/flvdec.c", "Line": 472}, {"HashID": "b79e3424cf1d4eede1a965b685ad3e43", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "57a44438395807bcf038451578e6d6b3.c", "FileName": "libavformat/hls.c", "Line": 442, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    }", "", "    dynarray_add(&pls->init_sections, &pls->n_init_sections, sec);", "", "    return sec;", "}", "", "static void handle_init_section_args(struct init_section_info *info, const char *key,", "                                           int key_len, char **dest, int *dest_len)", "{"], "SrcStart": 437}, {"FileMD5": "57a44438395807bcf038451578e6d6b3.c", "FileName": "libavformat/hls.c", "Line": 844, "Tip": "Function <b>new_init_section</b> executes and stores the return value to <b>cur_init_section</b> (<b>cur_init_section</b> can be null)", "SrcLines": ["            ret = ensure_playlist(c, &pls, url);", "            if (ret < 0)", "                goto fail;", "            ff_parse_key_value(ptr, (ff_parse_key_val_cb) handle_init_section_args,", "                               &info);", "            cur_init_section = new_init_section(pls, &info, url);", "            cur_init_section->key_type = key_type;", "            if (has_iv) {", "                memcpy(cur_init_section->iv, iv, sizeof(iv));", "            } else {"], "SrcStart": 839}, {"FileMD5": "57a44438395807bcf038451578e6d6b3.c", "FileName": "libavformat/hls.c", "Line": 845, "Tip": "Store <b>key_type</b> to <b>cur_init_section-&gt;key_type</b>", "SrcLines": ["            if (ret < 0)", "                goto fail;", "            ff_parse_key_value(ptr, (ff_parse_key_val_cb) handle_init_section_args,", "                               &info);", "            cur_init_section = new_init_section(pls, &info, url);", "            cur_init_section->key_type = key_type;", "            if (has_iv) {", "                memcpy(cur_init_section->iv, iv, sizeof(iv));", "            } else {", "                int64_t seq = pls->start_seq_no + pls->n_segments;"], "SrcStart": 840}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/hls.c", "Line": 845}, {"HashID": "16cc9edf6a120cac880b4bad6402704f", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "7f6a7eaafcd2a21ecccbb6a89eaf0f12.c", "FileName": "libavformat/hlsenc.c", "Line": 1149, "Tip": "Store <b>null</b> to <b>en-&gt;next</b>", "SrcLines": ["    en->duration = duration;", "    en->pos      = pos;", "    en->size     = size;", "    en->keyframe_pos      = vs->video_keyframe_pos;", "    en->keyframe_size     = vs->video_keyframe_size;", "    en->next     = NULL;", "    en->discont  = 0;", "    en->discont_program_date_time = 0;", "", "    if (vs->discontinuity) {"], "SrcStart": 1144}, {"FileMD5": "7f6a7eaafcd2a21ecccbb6a89eaf0f12.c", "FileName": "libavformat/hlsenc.c", "Line": 1176, "Tip": "Load value from <b>en-&gt;next</b>", "SrcLines": ["    if (hls->pl_type != PLAYLIST_TYPE_NONE)", "        hls->max_nb_segments = 0;", "", "    if (hls->max_nb_segments && vs->nb_entries >= hls->max_nb_segments) {", "        en = vs->segments;", "        if (!en->next->discont_program_date_time && !en->discont_program_date_time)", "            vs->initial_prog_date_time += en->duration;", "        vs->segments = en->next;", "        if (en && hls->flags & HLS_DELETE_SEGMENTS &&", "#if FF_API_HLS_WRAP"], "SrcStart": 1171}, {"FileMD5": "7f6a7eaafcd2a21ecccbb6a89eaf0f12.c", "FileName": "libavformat/hlsenc.c", "Line": 1176, "Tip": "Load value from <b>en-&gt;next-&gt;discont_program_date_time</b>", "SrcLines": ["    if (hls->pl_type != PLAYLIST_TYPE_NONE)", "        hls->max_nb_segments = 0;", "", "    if (hls->max_nb_segments && vs->nb_entries >= hls->max_nb_segments) {", "        en = vs->segments;", "        if (!en->next->discont_program_date_time && !en->discont_program_date_time)", "            vs->initial_prog_date_time += en->duration;", "        vs->segments = en->next;", "        if (en && hls->flags & HLS_DELETE_SEGMENTS &&", "#if FF_API_HLS_WRAP"], "SrcStart": 1171}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/hlsenc.c", "Line": 1176}, {"HashID": "65e5bf20a9a7898046120640dcd70989", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "95578be8021a2e5fa4ae808a840b4933.c", "FileName": "libavformat/mov.c", "Line": 1201, "Tip": "Return <b>null</b> to caller", "SrcLines": ["        if (item->stream_info[i].id == id)", "            return &item->stream_info[i];", "", "    // This shouldn't happen", "    return NULL;", "}", "", "static void set_frag_stream(MOVFragmentIndex *frag_index, int id)", "{", "    int i;"], "SrcStart": 1196}, {"FileMD5": "95578be8021a2e5fa4ae808a840b4933.c", "FileName": "libavformat/mov.c", "Line": 1281, "Tip": "Function <b>get_frag_stream_info</b> executes and stores the return value to <b>frag_stream_info</b> (<b>frag_stream_info</b> can be null)", "SrcLines": ["    MOVFragmentStreamInfo * frag_stream_info;", "    int64_t timestamp;", "    int i;", "", "    if (track_id >= 0) {", "        frag_stream_info = get_frag_stream_info(frag_index, index, track_id);", "        if (frag_stream_info->sidx_pts != AV_NOPTS_VALUE)", "            return frag_stream_info->sidx_pts;", "        if (frag_stream_info->first_tfra_pts != AV_NOPTS_VALUE)", "            return frag_stream_info->first_tfra_pts;"], "SrcStart": 1276}, {"FileMD5": "95578be8021a2e5fa4ae808a840b4933.c", "FileName": "libavformat/mov.c", "Line": 1282, "Tip": "Load value from <b>frag_stream_info-&gt;sidx_pts</b>", "SrcLines": ["    int64_t timestamp;", "    int i;", "", "    if (track_id >= 0) {", "        frag_stream_info = get_frag_stream_info(frag_index, index, track_id);", "        if (frag_stream_info->sidx_pts != AV_NOPTS_VALUE)", "            return frag_stream_info->sidx_pts;", "        if (frag_stream_info->first_tfra_pts != AV_NOPTS_VALUE)", "            return frag_stream_info->first_tfra_pts;", "        return frag_stream_info->sidx_pts;"], "SrcStart": 1277}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/mov.c", "Line": 1282}, {"HashID": "27f2de195c1946f5bf02b336b44867e9", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "016ea2fb5ee20df89b9e1826bb349a39.c", "FileName": "libavformat/movenc.c", "Line": 4210, "Tip": "Select the false branch at this point (<b>i&lt;s-&gt;nb_streams</b> is false)", "SrcLines": ["    mov_write_mvhd_tag(pb, mov);", "    if (mov->mode != MODE_MOV && !mov->iods_skip)", "        mov_write_iods_tag(pb, mov);", "    for (i = 0; i < mov->nb_streams; i++) {", "        if (mov->tracks[i].entry > 0 || mov->flags & FF_MOV_FLAG_FRAGMENT) {", "            int ret = mov_write_trak_tag(s, pb, mov, &(mov->tracks[i]), i < s->nb_streams ? s->streams[i] : NULL);", "            if (ret < 0)", "                return ret;", "        }", "    }"], "SrcStart": 4205}, {"FileMD5": "016ea2fb5ee20df89b9e1826bb349a39.c", "FileName": "libavformat/movenc.c", "Line": 4210, "Tip": "<b>null</b> is used as the 5th parameter in function <b>mov_write_trak_tag</b>", "SrcLines": ["    mov_write_mvhd_tag(pb, mov);", "    if (mov->mode != MODE_MOV && !mov->iods_skip)", "        mov_write_iods_tag(pb, mov);", "    for (i = 0; i < mov->nb_streams; i++) {", "        if (mov->tracks[i].entry > 0 || mov->flags & FF_MOV_FLAG_FRAGMENT) {", "            int ret = mov_write_trak_tag(s, pb, mov, &(mov->tracks[i]), i < s->nb_streams ? s->streams[i] : NULL);", "            if (ret < 0)", "                return ret;", "        }", "    }"], "SrcStart": 4205}, {"FileMD5": "016ea2fb5ee20df89b9e1826bb349a39.c", "FileName": "libavformat/movenc.c", "Line": 3396, "Tip": "Load value from <b>st-&gt;sample_aspect_ratio.id</b>", "SrcLines": ["            double sample_aspect_ratio = av_q2d(st->sample_aspect_ratio);", "            if (st->sample_aspect_ratio.num && 1.0 != sample_aspect_ratio) {", "                mov_write_tapt_tag(pb, track);", "            }", "        }", "        if (is_clcp_track(track) && st->sample_aspect_ratio.num) {", "            mov_write_tapt_tag(pb, track);", "        }", "    }", "    mov_write_track_udta_tag(pb, mov, st);"], "SrcStart": 3391}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/movenc.c", "Line": 3396}, {"HashID": "c4ecadd1493d77f64d8c29f9cf350853", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "cbc23179f1e3aefe81c3ef5760b4e986.c", "FileName": "libavformat/oggenc.c", "Line": 607, "Tip": "Select the false branch at this point (<b>i&lt;s-&gt;nb_streams</b> is false)", "SrcLines": ["static int ogg_write_header(AVFormatContext *s)", "{", "    OGGStreamContext *oggstream = NULL;", "    int i, j;", "", "    for (j = 0; j < s->nb_streams; j++) {", "        oggstream = s->streams[j]->priv_data;", "        ogg_buffer_data(s, s->streams[j], oggstream->header[0],", "                        oggstream->header_len[0], 0, 1);", "        oggstream->page.flags |= 2; // bos"], "SrcStart": 602}, {"FileMD5": "cbc23179f1e3aefe81c3ef5760b4e986.c", "FileName": "libavformat/oggenc.c", "Line": 614, "Tip": "Select the false branch at this point (<b>i&lt;s-&gt;nb_streams</b> is false)", "SrcLines": ["        ogg_buffer_data(s, s->streams[j], oggstream->header[0],", "                        oggstream->header_len[0], 0, 1);", "        oggstream->page.flags |= 2; // bos", "        ogg_buffer_page(s, oggstream);", "    }", "    for (j = 0; j < s->nb_streams; j++) {", "        AVStream *st = s->streams[j];", "        oggstream = st->priv_data;", "        for (i = 1; i < 3; i++) {", "            if (oggstream->header_len[i])"], "SrcStart": 609}, {"FileMD5": "cbc23179f1e3aefe81c3ef5760b4e986.c", "FileName": "libavformat/oggenc.c", "Line": 625, "Tip": "Store <b>-9223372036854775808</b> to <b>oggstream-&gt;page.start_granule</b>", "SrcLines": ["                                oggstream->header_len[i], 0, 1);", "        }", "        ogg_buffer_page(s, oggstream);", "    }", "", "    oggstream->page.start_granule = AV_NOPTS_VALUE;", "", "    ogg_write_pages(s, 2);", "", "    return 0;"], "SrcStart": 620}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/oggenc.c", "Line": 625}, {"HashID": "26e32ed36c921f0f2668084826a5d378", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 338, "Tip": "Select the false branch at this point (<b>bufptr!=null</b> is false)", "SrcLines": ["", "int", "ff_rdt_parse_packet(RDTDemuxContext *s, AVPacket *pkt,", "                    uint8_t **bufptr, int len)", "{", "    uint8_t *buf = bufptr ? *bufptr : NULL;", "    int seq_no, flags = 0, stream_id, set_id, is_keyframe;", "    uint32_t timestamp;", "    int rv= 0;", ""], "SrcStart": 333}, {"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 338, "Tip": "<b>null</b> assigned to <b>buf</b> reaches here", "SrcLines": ["", "int", "ff_rdt_parse_packet(RDTDemuxContext *s, AVPacket *pkt,", "                    uint8_t **bufptr, int len)", "{", "    uint8_t *buf = bufptr ? *bufptr : NULL;", "    int seq_no, flags = 0, stream_id, set_id, is_keyframe;", "    uint32_t timestamp;", "    int rv= 0;", ""], "SrcStart": 333}, {"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 357, "Tip": "<b>null</b> is used as the 1st parameter in function <b>ff_rdt_parse_header</b>", "SrcLines": ["        return rv;", "    }", "", "    if (len < 12)", "        return -1;", "    rv = ff_rdt_parse_header(buf, len, &set_id, &seq_no, &stream_id, &is_keyframe, &timestamp);", "    if (rv < 0)", "        return rv;", "    if (is_keyframe &&", "        (set_id != s->prev_set_id || timestamp != s->prev_timestamp ||"], "SrcStart": 352}, {"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 200, "Tip": "Load value from <b>buf[1]</b>", "SrcLines": ["    int consumed = 0, set_id, seq_no, stream_id, is_keyframe,", "        len_included, need_reliable;", "    uint32_t timestamp;", "", "    /* skip status packets */", "    while (len >= 5 && buf[1] == 0xFF /* status packet */) {", "        int pkt_len;", "", "        if (!(buf[0] & 0x80))", "            return -1; /* not followed by a data packet */"], "SrcStart": 195}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/rdt.c", "Line": 200}, {"HashID": "59d759e5ef9b9d8f0a1bc2c7bdd43064", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 338, "Tip": "Select the false branch at this point (<b>bufptr!=null</b> is false)", "SrcLines": ["", "int", "ff_rdt_parse_packet(RDTDemuxContext *s, AVPacket *pkt,", "                    uint8_t **bufptr, int len)", "{", "    uint8_t *buf = bufptr ? *bufptr : NULL;", "    int seq_no, flags = 0, stream_id, set_id, is_keyframe;", "    uint32_t timestamp;", "    int rv= 0;", ""], "SrcStart": 333}, {"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 338, "Tip": "<b>null</b> assigned to <b>buf</b> reaches here", "SrcLines": ["", "int", "ff_rdt_parse_packet(RDTDemuxContext *s, AVPacket *pkt,", "                    uint8_t **bufptr, int len)", "{", "    uint8_t *buf = bufptr ? *bufptr : NULL;", "    int seq_no, flags = 0, stream_id, set_id, is_keyframe;", "    uint32_t timestamp;", "    int rv= 0;", ""], "SrcStart": 333}, {"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 357, "Tip": "<b>null</b> is used as the 1st parameter in function <b>ff_rdt_parse_header</b>", "SrcLines": ["        return rv;", "    }", "", "    if (len < 12)", "        return -1;", "    rv = ff_rdt_parse_header(buf, len, &set_id, &seq_no, &stream_id, &is_keyframe, &timestamp);", "    if (rv < 0)", "        return rv;", "    if (is_keyframe &&", "        (set_id != s->prev_set_id || timestamp != s->prev_timestamp ||"], "SrcStart": 352}, {"FileMD5": "f0bf11b3c825eaa0124e2be7bd3951cc.c", "FileName": "libavformat/rdt.c", "Line": 203, "Tip": "Load value from <b>buf</b>", "SrcLines": ["", "    /* skip status packets */", "    while (len >= 5 && buf[1] == 0xFF /* status packet */) {", "        int pkt_len;", "", "        if (!(buf[0] & 0x80))", "            return -1; /* not followed by a data packet */", "", "        pkt_len = AV_RB16(buf+3);", "        buf += pkt_len;"], "SrcStart": 198}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/rdt.c", "Line": 203}, {"HashID": "57f77a785e78a94fd46783c84a58caf2", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "45c1e133923849dc5cf9a9393839cba9.c", "FileName": "libavformat/rtmpproto.c", "Line": 1746, "Tip": "Select the false branch at this point (<b>cptr==null</b> is false)", "SrcLines": ["        snprintf(rt->auth_params, sizeof(rt->auth_params),", "                 \"?authmod=%s&user=%s\", authmod, rt->username);", "        return 0;", "    }", "", "    if (!(cptr = strstr(desc, \"?reason=needauth\"))) {", "        av_log(s, AV_LOG_ERROR, \"No auth parameters found\\n\");", "        return AVERROR_UNKNOWN;", "    }", ""], "SrcStart": 1741}, {"FileMD5": "45c1e133923849dc5cf9a9393839cba9.c", "FileName": "libavformat/rtmpproto.c", "Line": 1759, "Tip": "Select the false branch at this point (<b>value!=null</b> is false)", "SrcLines": ["    while (ptr) {", "        char *next  = strchr(ptr, '&');", "        char *value = strchr(ptr, '=');", "        if (next)", "            *next++ = '\\0';", "        if (value) {", "            *value++ = '\\0';", "            if (!strcmp(ptr, \"user\")) {", "                user = value;", "            } else if (!strcmp(ptr, \"salt\")) {"], "SrcStart": 1754}, {"FileMD5": "45c1e133923849dc5cf9a9393839cba9.c", "FileName": "libavformat/rtmpproto.c", "Line": 1754, "Tip": "Select the false branch at this point (<b>ptr!=null</b> is false)", "SrcLines": ["    }", "", "    av_strlcpy(buf, cptr + 1, sizeof(buf));", "    ptr = buf;", "", "    while (ptr) {", "        char *next  = strchr(ptr, '&');", "        char *value = strchr(ptr, '=');", "        if (next)", "            *next++ = '\\0';"], "SrcStart": 1749}, {"FileMD5": "45c1e133923849dc5cf9a9393839cba9.c", "FileName": "libavformat/rtmpproto.c", "Line": 1784, "Tip": "<b>null</b> is used as the 3rd parameter in function <b>do_llnw_auth</b>", "SrcLines": ["", "    if (!strcmp(authmod, \"adobe\")) {", "        if ((ret = do_adobe_auth(rt, user, salt, opaque, challenge)) < 0)", "            return ret;", "    } else {", "        if ((ret = do_llnw_auth(rt, user, nonce)) < 0)", "            return ret;", "    }", "", "    rt->auth_tried = 1;"], "SrcStart": 1779}, {"FileMD5": "45c1e133923849dc5cf9a9393839cba9.c", "FileName": "libavformat/rtmpproto.c", "Line": 1693, "Tip": "<b>nonce</b> is passed to function <b>snprintf</b> as a variadic argument (<b>nonce</b> can be null)", "SrcLines": ["    av_md5_update(md5, \":\", 1);", "    av_md5_update(md5, hashstr2, strlen(hashstr2));", "    av_md5_final(md5, hash);", "    ff_data_to_hex(hashstr1, hash, 16, 1);", "", "    snprintf(rt->auth_params, sizeof(rt->auth_params),", "             \"?authmod=%s&user=%s&nonce=%s&cnonce=%s&nc=%s&response=%s\",", "             \"llnw\", user, nonce, cnonce, nc, hashstr1);", "", "    av_free(md5);"], "SrcStart": 1688}], "Review": 80, "Time": 1629219860000, "DocID": "PE0001", "File": "libavformat/rtmpproto.c", "Line": 1693}]}, "start": 41, "end": 50, "page": 6, "total_pages": 8, "language": "en"}