var data = {"bug_cases": {"BugType": "NULL pointer dereference", "Severity": 12, "CaseList": [{"HashID": "2fafd353ebb1b83aa6e0a850df630a45", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "fdbf45d391d4c36e652033e1b961ca25.c", "FileName": "crypto/ec/ecp_smpl.c", "Line": 1431, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>lambda</b> (<b>lambda</b> can be null)", "SrcLines": ["    int ret = 0;", "    BIGNUM *lambda = NULL;", "    BIGNUM *temp = NULL;", "", "    BN_CTX_start(ctx);", "    lambda = BN_CTX_get(ctx);", "    temp = BN_CTX_get(ctx);", "    if (temp == NULL) {", "        ECerr(EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES, ERR_R_MALLOC_FAILURE);", "        goto end;"], "SrcStart": 1426}, {"FileMD5": "fdbf45d391d4c36e652033e1b961ca25.c", "FileName": "crypto/ec/ecp_smpl.c", "Line": 1445, "Tip": "<b>lambda</b> is used as the 1st parameter in function <b>BN_priv_rand_range</b> (<b>lambda</b> can be null)", "SrcLines": ["     * If the RNG fails, we cannot blind but nevertheless want", "     * code to continue smoothly and not clobber the error stack.", "     */", "    do {", "        ERR_set_mark();", "        ret = BN_priv_rand_range(lambda, group->field);", "        ERR_pop_to_mark();", "        if (ret == 0) {", "            ret = 1;", "            goto end;"], "SrcStart": 1440}, {"FileMD5": "cf05f40cb622465a29063b20ccc16de4.c", "FileName": "crypto/bn/bn_rand.c", "Line": 184, "Tip": "<b>r</b> is used as the 2nd parameter in function <b>bnrand_range</b> (<b>r</b> can be null)", "SrcLines": ["    return bnrand_range(NORMAL, r, range);", "}", "", "int BN_priv_rand_range(BIGNUM *r, const BIGNUM *range)", "{", "    return bnrand_range(PRIVATE, r, range);", "}", "", "int BN_pseudo_rand(BIGNUM *rnd, int bits, int top, int bottom)", "{"], "SrcStart": 179}, {"FileMD5": "cf05f40cb622465a29063b20ccc16de4.c", "FileName": "crypto/bn/bn_rand.c", "Line": 148, "Tip": "<b>r</b> is used as the 1st parameter in function <b>BN_sub</b> (<b>r</b> can be null)", "SrcLines": ["             */", "            if (BN_cmp(r, range) >= 0) {", "                if (!BN_sub(r, r, range))", "                    return 0;", "                if (BN_cmp(r, range) >= 0)", "                    if (!BN_sub(r, r, range))", "                        return 0;", "            }", "", "            if (!--count) {"], "SrcStart": 143}, {"FileMD5": "b1bc9ccb8bb3d5081d97b627cb0434a8.c", "FileName": "crypto/bn/bn_add.c", "Line": 52, "Tip": "Load value from <b>a-&gt;neg</b>", "SrcLines": ["    int ret, r_neg, cmp_res;", "", "    bn_check_top(a);", "    bn_check_top(b);", "", "    if (a->neg != b->neg) {", "        r_neg = a->neg;", "        ret = BN_uadd(r, a, b);", "    } else {", "        cmp_res = BN_ucmp(a, b);"], "SrcStart": 47}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_add.c", "Line": 52}, {"HashID": "869c5a1935998053cf975a8730247b43", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "5b2a22e06268dbbc68de45d4680249bd.c", "FileName": "crypto/rsa/rsa_crpt.c", "Line": 92, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>r1</b> (<b>r1</b> can be null)", "SrcLines": ["    if (d == NULL || p == NULL || q == NULL)", "        return NULL;", "", "    BN_CTX_start(ctx);", "    r0 = BN_CTX_get(ctx);", "    r1 = BN_CTX_get(ctx);", "    r2 = BN_CTX_get(ctx);", "    if (r2 == NULL)", "        goto err;", ""], "SrcStart": 87}, {"FileMD5": "5b2a22e06268dbbc68de45d4680249bd.c", "FileName": "crypto/rsa/rsa_crpt.c", "Line": 97, "Tip": "<b>r1</b> is used as the 1st parameter in function <b>BN_sub</b> (<b>r1</b> can be null)", "SrcLines": ["    r1 = BN_CTX_get(ctx);", "    r2 = BN_CTX_get(ctx);", "    if (r2 == NULL)", "        goto err;", "", "    if (!BN_sub(r1, p, BN_value_one()))", "        goto err;", "    if (!BN_sub(r2, q, BN_value_one()))", "        goto err;", "    if (!BN_mul(r0, r1, r2, ctx))"], "SrcStart": 92}, {"FileMD5": "b1bc9ccb8bb3d5081d97b627cb0434a8.c", "FileName": "crypto/bn/bn_add.c", "Line": 70, "Tip": "Store <b>r_neg</b> to <b>r-&gt;neg</b>", "SrcLines": ["            BN_zero(r);", "            ret = 1;", "        }", "    }", "", "    r->neg = r_neg;", "    bn_check_top(r);", "    return ret;", "}", ""], "SrcStart": 65}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_add.c", "Line": 70}, {"HashID": "2f1b96ac230e56844696f388796432e6", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "2d176deab02e859e2856fbeb2bbe51d7.c", "FileName": "crypto/rsa/rsa_x931g.c", "Line": 37, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>r1</b> (<b>r1</b> can be null)", "SrcLines": ["    if (ctx == NULL)", "        goto err;", "    BN_CTX_start(ctx);", "", "    r0 = BN_CTX_get(ctx);", "    r1 = BN_CTX_get(ctx);", "    r2 = BN_CTX_get(ctx);", "    r3 = BN_CTX_get(ctx);", "", "    if (r3 == NULL)"], "SrcStart": 32}, {"FileMD5": "2d176deab02e859e2856fbeb2bbe51d7.c", "FileName": "crypto/rsa/rsa_x931g.c", "Line": 119, "Tip": "<b>r1</b> is used as the 4th parameter in function <b>BN_div</b> (<b>r1</b> can be null)", "SrcLines": ["", "    /* calculate d mod (p-1) */", "    rsa->dmp1 = BN_new();", "    if (rsa->dmp1 == NULL)", "        goto err;", "    if (!BN_mod(rsa->dmp1, rsa->d, r1, ctx))", "        goto err;", "", "    /* calculate d mod (q-1) */", "    rsa->dmq1 = BN_new();"], "SrcStart": 114}, {"FileMD5": "72e311c9b227cabc985684156075fe45.c", "FileName": "crypto/bn/bn_div.c", "Line": 224, "Tip": "Load value from <b>divisor-&gt;d</b>", "SrcLines": ["    /*", "     * Invalid zero-padding would have particularly bad consequences so don't", "     * just rely on bn_check_top() here (bn_check_top() works only for", "     * BN_DEBUG builds)", "     */", "    if (divisor->d[divisor->top - 1] == 0) {", "        BNerr(BN_F_BN_DIV, BN_R_NOT_INITIALIZED);", "        return 0;", "    }", ""], "SrcStart": 219}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_div.c", "Line": 224}, {"HashID": "632afce66e8d68e1beaa0630ad9c783d", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "2b67978c4ae15cf61d2409d87b705597.c", "FileName": "crypto/ec/ec2_smpl.c", "Line": 793, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>t1</b> (<b>t1</b> can be null)", "SrcLines": ["        return 1;", "    }", "", "    BN_CTX_start(ctx);", "    t0 = BN_CTX_get(ctx);", "    t1 = BN_CTX_get(ctx);", "    t2 = BN_CTX_get(ctx);", "    if (t2 == NULL) {", "        ECerr(EC_F_EC_GF2M_SIMPLE_LADDER_POST, ERR_R_MALLOC_FAILURE);", "        goto err;"], "SrcStart": 788}, {"FileMD5": "2b67978c4ae15cf61d2409d87b705597.c", "FileName": "crypto/ec/ec2_smpl.c", "Line": 802, "Tip": "<b>t1</b> is used as the 1st parameter in function <b>BN_GF2m_add</b> (<b>t1</b> can be null)", "SrcLines": ["        goto err;", "    }", "", "    if (!group->meth->field_mul(group, t0, r->Z, s->Z, ctx)", "        || !group->meth->field_mul(group, t1, p->X, r->Z, ctx)", "        || !BN_GF2m_add(t1, r->X, t1)", "        || !group->meth->field_mul(group, t2, p->X, s->Z, ctx)", "        || !group->meth->field_mul(group, r->Z, r->X, t2, ctx)", "        || !BN_GF2m_add(t2, t2, s->X)", "        || !group->meth->field_mul(group, t1, t1, t2, ctx)"], "SrcStart": 797}, {"FileMD5": "af984bb8d1d060a64505a6af0f13709d.c", "FileName": "crypto/bn/bn_gf2m.c", "Line": 260, "Tip": "Load value from <b>bt-&gt;top</b>", "SrcLines": ["    const BIGNUM *at, *bt;", "", "    bn_check_top(a);", "    bn_check_top(b);", "", "    if (a->top < b->top) {", "        at = b;", "        bt = a;", "    } else {", "        at = a;"], "SrcStart": 255}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_gf2m.c", "Line": 260}, {"HashID": "e44e1fba2dc2afb4be27aabd74de5b98", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "379c01b01a8a59f9e923a636853bff9d.c", "FileName": "crypto/sm2/sm2_sign.c", "Line": 51, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>p</b> (<b>p</b> can be null)", "SrcLines": ["    if (hash == NULL || ctx == NULL) {", "        SM2err(SM2_F_SM2_COMPUTE_Z_DIGEST, ERR_R_MALLOC_FAILURE);", "        goto done;", "    }", "", "    p = BN_CTX_get(ctx);", "    a = BN_CTX_get(ctx);", "    b = BN_CTX_get(ctx);", "    xG = BN_CTX_get(ctx);", "    yG = BN_CTX_get(ctx);"], "SrcStart": 46}, {"FileMD5": "379c01b01a8a59f9e923a636853bff9d.c", "FileName": "crypto/sm2/sm2_sign.c", "Line": 100, "Tip": "<b>p</b> is used as the 1st parameter in function <b>BN_num_bits</b> (<b>p</b> can be null)", "SrcLines": ["    if (!EC_GROUP_get_curve(group, p, a, b, ctx)) {", "        SM2err(SM2_F_SM2_COMPUTE_Z_DIGEST, ERR_R_EC_LIB);", "        goto done;", "    }", "", "    p_bytes = BN_num_bytes(p);", "    buf = OPENSSL_zalloc(p_bytes);", "    if (buf == NULL) {", "        SM2err(SM2_F_SM2_COMPUTE_Z_DIGEST, ERR_R_MALLOC_FAILURE);", "        goto done;"], "SrcStart": 95}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 179, "Tip": "Load value from <b>a-&gt;top</b>", "SrcLines": ["    return ret & mask;", "}", "", "int BN_num_bits(const BIGNUM *a)", "{", "    int i = a->top - 1;", "    bn_check_top(a);", "", "    if (a->flags & BN_FLG_CONSTTIME) {", "        /*"], "SrcStart": 174}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_lib.c", "Line": 179}, {"HashID": "3d4425f2b7f06adcd55bab50e6c9a0be", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "bcc13011f395a181aa7d9406ed155654.c", "FileName": "crypto/ec/ec2_oct.c", "Line": 163, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>x</b> (<b>x</b> can be null)", "SrcLines": ["                return 0;", "        }", "", "        BN_CTX_start(ctx);", "        used_ctx = 1;", "        x = BN_CTX_get(ctx);", "        y = BN_CTX_get(ctx);", "        yxi = BN_CTX_get(ctx);", "        if (yxi == NULL)", "            goto err;"], "SrcStart": 158}, {"FileMD5": "bcc13011f395a181aa7d9406ed155654.c", "FileName": "crypto/ec/ec2_oct.c", "Line": 182, "Tip": "<b>x</b> is used as the 1st parameter in function <b>BN_num_bits</b> (<b>x</b> can be null)", "SrcLines": ["                buf[0]++;", "        }", "", "        i = 1;", "", "        skip = field_len - BN_num_bytes(x);", "        if (skip > field_len) {", "            ECerr(EC_F_EC_GF2M_SIMPLE_POINT2OCT, ERR_R_INTERNAL_ERROR);", "            goto err;", "        }"], "SrcStart": 177}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 182, "Tip": "Load value from <b>a-&gt;flags</b>", "SrcLines": ["int BN_num_bits(const BIGNUM *a)", "{", "    int i = a->top - 1;", "    bn_check_top(a);", "", "    if (a->flags & BN_FLG_CONSTTIME) {", "        /*", "         * We assume that BIGNUMs flagged as CONSTTIME have also been expanded", "         * so that a->dmax is not leaking secret information.", "         *"], "SrcStart": 177}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_lib.c", "Line": 182}, {"HashID": "e37f707536bbda03dfb024ff20169179", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "379c01b01a8a59f9e923a636853bff9d.c", "FileName": "crypto/sm2/sm2_sign.c", "Line": 52, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>a</b> (<b>a</b> can be null)", "SrcLines": ["        SM2err(SM2_F_SM2_COMPUTE_Z_DIGEST, ERR_R_MALLOC_FAILURE);", "        goto done;", "    }", "", "    p = BN_CTX_get(ctx);", "    a = BN_CTX_get(ctx);", "    b = BN_CTX_get(ctx);", "    xG = BN_CTX_get(ctx);", "    yG = BN_CTX_get(ctx);", "    xA = BN_CTX_get(ctx);"], "SrcStart": 47}, {"FileMD5": "379c01b01a8a59f9e923a636853bff9d.c", "FileName": "crypto/sm2/sm2_sign.c", "Line": 107, "Tip": "<b>a</b> is used as the 1st parameter in function <b>BN_bn2binpad</b> (<b>a</b> can be null)", "SrcLines": ["    if (buf == NULL) {", "        SM2err(SM2_F_SM2_COMPUTE_Z_DIGEST, ERR_R_MALLOC_FAILURE);", "        goto done;", "    }", "", "    if (BN_bn2binpad(a, buf, p_bytes) < 0", "            || !EVP_DigestUpdate(hash, buf, p_bytes)", "            || BN_bn2binpad(b, buf, p_bytes) < 0", "            || !EVP_DigestUpdate(hash, buf, p_bytes)", "            || !EC_POINT_get_affine_coordinates(group,"], "SrcStart": 102}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 534, "Tip": "<b>a</b> is used as the 1st parameter in function <b>bn2binpad</b> (<b>a</b> can be null)", "SrcLines": ["", "int BN_bn2binpad(const BIGNUM *a, unsigned char *to, int tolen)", "{", "    if (tolen < 0)", "        return -1;", "    return bn2binpad(a, to, tolen, big);", "}", "", "int BN_bn2bin(const BIGNUM *a, unsigned char *to)", "{"], "SrcStart": 529}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 496, "Tip": "Copy data from <b>a</b> (<b>a</b> can be null)", "SrcLines": ["     */", "    n = BN_num_bytes(a);", "    if (tolen == -1) {", "        tolen = n;", "    } else if (tolen < n) {     /* uncommon/unlike case */", "        BIGNUM temp = *a;", "", "        bn_correct_top(&temp);", "        n = BN_num_bytes(&temp);", "        if (tolen < n)"], "SrcStart": 491}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_lib.c", "Line": 496}, {"HashID": "90e6cf0884c41083fe61c2e1ebde5561", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "0b81c50a777b6acc54c20437b2939cf7.c", "FileName": "crypto/ec/ecp_oct.c", "Line": 204, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>x</b> (<b>x</b> can be null)", "SrcLines": ["                return 0;", "        }", "", "        BN_CTX_start(ctx);", "        used_ctx = 1;", "        x = BN_CTX_get(ctx);", "        y = BN_CTX_get(ctx);", "        if (y == NULL)", "            goto err;", ""], "SrcStart": 199}, {"FileMD5": "0b81c50a777b6acc54c20437b2939cf7.c", "FileName": "crypto/ec/ecp_oct.c", "Line": 229, "Tip": "<b>x</b> is used as the 1st parameter in function <b>BN_bn2bin</b> (<b>x</b> can be null)", "SrcLines": ["        }", "        while (skip > 0) {", "            buf[i++] = 0;", "            skip--;", "        }", "        skip = BN_bn2bin(x, buf + i);", "        i += skip;", "        if (i != 1 + field_len) {", "            ECerr(EC_F_EC_GFP_SIMPLE_POINT2OCT, ERR_R_INTERNAL_ERROR);", "            goto err;"], "SrcStart": 224}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 539, "Tip": "<b>a</b> is used as the 1st parameter in function <b>bn2binpad</b> (<b>a</b> can be null)", "SrcLines": ["    return bn2binpad(a, to, tolen, big);", "}", "", "int BN_bn2bin(const BIGNUM *a, unsigned char *to)", "{", "    return bn2binpad(a, to, -1, big);", "}", "", "BIGNUM *BN_lebin2bn(const unsigned char *s, int len, BIGNUM *ret)", "{"], "SrcStart": 534}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 505, "Tip": "Load value from <b>a-&gt;dmax</b>", "SrcLines": ["        if (tolen < n)", "            return -1;", "    }", "", "    /* Swipe through whole available data and don't give away padded zero. */", "    atop = a->dmax * BN_BYTES;", "    if (atop == 0) {", "        OPENSSL_cleanse(to, tolen);", "        return tolen;", "    }"], "SrcStart": 500}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_lib.c", "Line": 505}, {"HashID": "77af363606e3dc3e73ab369d4315d767", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "379c01b01a8a59f9e923a636853bff9d.c", "FileName": "crypto/sm2/sm2_sign.c", "Line": 307, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>t</b> (<b>t</b> can be null)", "SrcLines": ["        SM2err(SM2_F_SM2_SIG_VERIFY, ERR_R_MALLOC_FAILURE);", "        goto done;", "    }", "", "    BN_CTX_start(ctx);", "    t = BN_CTX_get(ctx);", "    x1 = BN_CTX_get(ctx);", "    if (x1 == NULL) {", "        SM2err(SM2_F_SM2_SIG_VERIFY, ERR_R_MALLOC_FAILURE);", "        goto done;"], "SrcStart": 302}, {"FileMD5": "379c01b01a8a59f9e923a636853bff9d.c", "FileName": "crypto/sm2/sm2_sign.c", "Line": 339, "Tip": "<b>t</b> is used as the 1st parameter in function <b>BN_is_zero</b> (<b>t</b> can be null)", "SrcLines": ["    if (!BN_mod_add(t, r, s, order, ctx)) {", "        SM2err(SM2_F_SM2_SIG_VERIFY, ERR_R_BN_LIB);", "        goto done;", "    }", "", "    if (BN_is_zero(t)) {", "        SM2err(SM2_F_SM2_SIG_VERIFY, SM2_R_BAD_SIGNATURE);", "        goto done;", "    }", ""], "SrcStart": 334}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 905, "Tip": "Load value from <b>a-&gt;top</b>", "SrcLines": ["    return ((a->top == 1) && (a->d[0] == w)) || ((w == 0) && (a->top == 0));", "}", "", "int BN_is_zero(const BIGNUM *a)", "{", "    return a->top == 0;", "}", "", "int BN_is_one(const BIGNUM *a)", "{"], "SrcStart": 900}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_lib.c", "Line": 905}, {"HashID": "6d541262278c4a3abe9b161ff5f9e8bc", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f0a5b433c9ee5f470b0f3d2915a4870e.c", "FileName": "crypto/bn/bn_ctx.c", "Line": 237, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    /* clear BN_FLG_CONSTTIME if leaked from previous frames */", "    ret->flags &= (\u203eBN_FLG_CONSTTIME);", "    ctx->used++;", "    CTXDBG_RET(ctx, ret);", "    return ret;", "}", "", "/************/", "/* BN_STACK */", "/************/"], "SrcStart": 232}, {"FileMD5": "313f63367c87841b64467d0ee7e8fcdb.c", "FileName": "crypto/dh/dh_check.c", "Line": 111, "Tip": "Function <b>BN_CTX_get</b> executes and stores the return value to <b>t1</b> (<b>t1</b> can be null)", "SrcLines": ["", "    ctx = BN_CTX_new();", "    if (ctx == NULL)", "        goto err;", "    BN_CTX_start(ctx);", "    t1 = BN_CTX_get(ctx);", "    t2 = BN_CTX_get(ctx);", "    if (t2 == NULL)", "        goto err;", ""], "SrcStart": 106}, {"FileMD5": "313f63367c87841b64467d0ee7e8fcdb.c", "FileName": "crypto/dh/dh_check.c", "Line": 125, "Tip": "<b>t1</b> is used as the 1st parameter in function <b>BN_is_one</b> (<b>t1</b> can be null)", "SrcLines": ["            *ret |= DH_NOT_SUITABLE_GENERATOR;", "        else {", "            /* Check g^q == 1 mod p */", "            if (!BN_mod_exp(t1, dh->g, dh->q, dh->p, ctx))", "                goto err;", "            if (!BN_is_one(t1))", "                *ret |= DH_NOT_SUITABLE_GENERATOR;", "        }", "        r = BN_is_prime_ex(dh->q, DH_NUMBER_ITERATIONS_FOR_PRIME, ctx, NULL);", "        if (r < 0)"], "SrcStart": 120}, {"FileMD5": "bb6786814fe080818367893943932b6a.c", "FileName": "crypto/bn/bn_lib.c", "Line": 910, "Tip": "Load value from <b>a-&gt;neg</b>", "SrcLines": ["    return a->top == 0;", "}", "", "int BN_is_one(const BIGNUM *a)", "{", "    return BN_abs_is_word(a, 1) && !a->neg;", "}", "", "int BN_is_word(const BIGNUM *a, const BN_ULONG w)", "{"], "SrcStart": 905}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/bn/bn_lib.c", "Line": 910}]}, "start": 11, "end": 20, "page": 3, "total_pages": 12, "language": "en"}