var data = {"bug_cases": {"BugType": "NULL pointer dereference", "Severity": 12, "CaseList": [{"HashID": "3dfa7d8cf063f0cf21d07276c47da457", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "f2272d8c3c73e81d46873146c8a9a7e1.c", "FileName": "crypto/stack/stack.c", "Line": 390, "Tip": "Return <b>null</b> to caller", "SrcLines": ["void *OPENSSL_sk_value(const OPENSSL_STACK *st, int i)", "{", "    if (st == NULL || i < 0 || i >= st->num)", "        return NULL;", "    return (void *)st->data[i];", "}", "", "void *OPENSSL_sk_set(OPENSSL_STACK *st, int i, const void *data)", "{", "    if (st == NULL || i < 0 || i >= st->num)"], "SrcStart": 385}, {"FileMD5": "bca7eb7c72dbbf6d7fcda63514d9f27e.h", "FileName": "include/openssl/x509.h", "Line": 99, "Tip": "Return the return value of function <b>OPENSSL_sk_value</b> to caller", "SrcLines": ["", "typedef struct x509_cert_aux_st X509_CERT_AUX;", "", "typedef struct x509_cinf_st X509_CINF;", "", "DEFINE_STACK_OF(X509)", "", "/* This is used for a table of trust checking functions */", "", "typedef struct x509_trust_st {"], "SrcStart": 94}, {"FileMD5": "87527097900edf976ffa31138e4c5ff9.c", "FileName": "crypto/x509/x509_vfy.c", "Line": 1252, "Tip": "Function <b>sk_X509_value</b> executes and stores the return value to <b>crl_issuer</b> (<b>crl_issuer</b> can be null)", "SrcLines": ["    int i;", "", "    if (cidx != sk_X509_num(ctx->chain) - 1)", "        cidx++;", "", "    crl_issuer = sk_X509_value(ctx->chain, cidx);", "", "    if (X509_check_akid(crl_issuer, crl->akid) == X509_V_OK) {", "        if (*pcrl_score & CRL_SCORE_ISSUER_NAME) {", "            *pcrl_score |= CRL_SCORE_AKID | CRL_SCORE_ISSUER_CERT;"], "SrcStart": 1247}, {"FileMD5": "87527097900edf976ffa31138e4c5ff9.c", "FileName": "crypto/x509/x509_vfy.c", "Line": 1254, "Tip": "<b>crl_issuer</b> is used as the 1st parameter in function <b>X509_check_akid</b> (<b>crl_issuer</b> can be null)", "SrcLines": ["    if (cidx != sk_X509_num(ctx->chain) - 1)", "        cidx++;", "", "    crl_issuer = sk_X509_value(ctx->chain, cidx);", "", "    if (X509_check_akid(crl_issuer, crl->akid) == X509_V_OK) {", "        if (*pcrl_score & CRL_SCORE_ISSUER_NAME) {", "            *pcrl_score |= CRL_SCORE_AKID | CRL_SCORE_ISSUER_CERT;", "            *pissuer = crl_issuer;", "            return;"], "SrcStart": 1249}, {"FileMD5": "c1d07122801b927b8b3769e6b29a0184.c", "FileName": "crypto/x509v3/v3_purp.c", "Line": 886, "Tip": "Load value from <b>issuer-&gt;skid</b>", "SrcLines": ["", "    if (!akid)", "        return X509_V_OK;", "", "    /* Check key ids (if present) */", "    if (akid->keyid && issuer->skid &&", "        ASN1_OCTET_STRING_cmp(akid->keyid, issuer->skid))", "        return X509_V_ERR_AKID_SKID_MISMATCH;", "    /* Check serial number */", "    if (akid->serial &&"], "SrcStart": 881}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "crypto/x509v3/v3_purp.c", "Line": 886}, {"HashID": "db4bc370030e3313b995f2946a93cdd5", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "c9a66d6fc4e00312516f45d1c784fd6d.c", "FileName": "engines/e_afalg.c", "Line": 659, "Tip": "Return <b>null</b> to caller", "SrcLines": ["    case NID_aes_256_cbc:", "        return &cbc_handle[AES_CBC_256];", "    default:", "        return NULL;", "    }", "}", "", "static const EVP_CIPHER *afalg_aes_cbc(int nid)", "{", "    cbc_handles *cipher_handle = get_cipher_handle(nid);"], "SrcStart": 654}, {"FileMD5": "c9a66d6fc4e00312516f45d1c784fd6d.c", "FileName": "engines/e_afalg.c", "Line": 663, "Tip": "Function <b>get_cipher_handle</b> executes and stores the return value to <b>cipher_handle</b> (<b>cipher_handle</b> can be null)", "SrcLines": ["    }", "}", "", "static const EVP_CIPHER *afalg_aes_cbc(int nid)", "{", "    cbc_handles *cipher_handle = get_cipher_handle(nid);", "    if (cipher_handle->_hidden == NULL", "        && ((cipher_handle->_hidden =", "         EVP_CIPHER_meth_new(nid,", "                             AES_BLOCK_SIZE,"], "SrcStart": 658}, {"FileMD5": "c9a66d6fc4e00312516f45d1c784fd6d.c", "FileName": "engines/e_afalg.c", "Line": 664, "Tip": "Load value from <b>cipher_handle-&gt;_hidden</b>", "SrcLines": ["}", "", "static const EVP_CIPHER *afalg_aes_cbc(int nid)", "{", "    cbc_handles *cipher_handle = get_cipher_handle(nid);", "    if (cipher_handle->_hidden == NULL", "        && ((cipher_handle->_hidden =", "         EVP_CIPHER_meth_new(nid,", "                             AES_BLOCK_SIZE,", "                             cipher_handle->key_size)) == NULL"], "SrcStart": 659}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "engines/e_afalg.c", "Line": 664}, {"HashID": "408d1a6c3fcaf2fa6dfa0933f2802633", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "4227724990f15db065172470cb78736e.c", "FileName": "test/danetest.c", "Line": 136, "Tip": "Store <b>null</b> to <b>name</b>", "SrcLines": ["        }", "", "        OPENSSL_free(name);", "        OPENSSL_free(header);", "        OPENSSL_free(data);", "        name = header = NULL;", "        data = NULL;", "    }", "", "    if (count == nelem) {"], "SrcStart": 131}, {"FileMD5": "4227724990f15db065172470cb78736e.c", "FileName": "test/danetest.c", "Line": 113, "Tip": "<b>name</b> is used as the 1st parameter in function <b>strcmp</b> (<b>name</b> can be null)", "SrcLines": ["    for (count = 0;", "         count < nelem && errtype == 0", "         && PEM_read_bio(fp, &name, &header, &data, &len) == 1;", "         ++count) {", "        if (strcmp(name, PEM_STRING_X509) == 0", "                    || strcmp(name, PEM_STRING_X509_TRUSTED) == 0", "                    || strcmp(name, PEM_STRING_X509_OLD) == 0) {", "            d2i_X509_t d = strcmp(name, PEM_STRING_X509_TRUSTED) != 0", "                ? d2i_X509_AUX : d2i_X509;", "            X509 *cert;"], "SrcStart": 108}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "test/danetest.c", "Line": 113}, {"HashID": "096eedd9739c67cc12095bd793a4d86d", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "4b377c68be4e56ea31ce7721b07a6f7f.c", "FileName": "test/ssl_test_ctx.c", "Line": 839, "Tip": "Select the true branch at this point (<b>test_ptr(&quot;&quot;/home/anonymous/realbenchmark/openssl/openssl-OpenSSL_1_1_1k/test/ssl_test_ctx.c&quot;&quot;,839,&quot;&quot;sk_conf = NCONF_get_section(conf, test_section)&quot;&quot;,sk_conf)==0</b> is true)", "SrcLines": ["    STACK_OF(CONF_VALUE) *sk_conf = NULL;", "    SSL_TEST_CTX *ctx = NULL;", "    int i;", "    size_t j;", "", "    if (!TEST_ptr(sk_conf = NCONF_get_section(conf, test_section))", "            || !TEST_ptr(ctx = SSL_TEST_CTX_new()))", "        goto err;", "", "    for (i = 0; i < sk_CONF_VALUE_num(sk_conf); i++) {"], "SrcStart": 834}, {"FileMD5": "4b377c68be4e56ea31ce7721b07a6f7f.c", "FileName": "test/ssl_test_ctx.c", "Line": 841, "Tip": "<b>null</b> assigned to <b>ctx</b> reaches here", "SrcLines": ["    int i;", "    size_t j;", "", "    if (!TEST_ptr(sk_conf = NCONF_get_section(conf, test_section))", "            || !TEST_ptr(ctx = SSL_TEST_CTX_new()))", "        goto err;", "", "    for (i = 0; i < sk_CONF_VALUE_num(sk_conf); i++) {", "        int found = 0;", "        const CONF_VALUE *option = sk_CONF_VALUE_value(sk_conf, i);"], "SrcStart": 836}, {"FileMD5": "4b377c68be4e56ea31ce7721b07a6f7f.c", "FileName": "test/ssl_test_ctx.c", "Line": 891, "Tip": "<b>null</b> is used as the 1st parameter in function <b>SSL_TEST_CTX_free</b>", "SrcLines": ["    }", "", "    goto done;", "", " err:", "    SSL_TEST_CTX_free(ctx);", "    ctx = NULL;", " done:", "    return ctx;", "}"], "SrcStart": 886}, {"FileMD5": "4b377c68be4e56ea31ce7721b07a6f7f.c", "FileName": "test/ssl_test_ctx.c", "Line": 757, "Tip": "Load value from <b>ctx-&gt;expected_npn_protocol</b>", "SrcLines": ["}", "", "void SSL_TEST_CTX_free(SSL_TEST_CTX *ctx)", "{", "    ssl_test_ctx_free_extra_data(ctx);", "    OPENSSL_free(ctx->expected_npn_protocol);", "    OPENSSL_free(ctx->expected_alpn_protocol);", "    OPENSSL_free(ctx->expected_session_ticket_app_data);", "    sk_X509_NAME_pop_free(ctx->expected_server_ca_names, X509_NAME_free);", "    sk_X509_NAME_pop_free(ctx->expected_client_ca_names, X509_NAME_free);"], "SrcStart": 752}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "test/ssl_test_ctx.c", "Line": 757}, {"HashID": "cdc5c5a52b466d14e1839371e6c1ad53", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "4b377c68be4e56ea31ce7721b07a6f7f.c", "FileName": "test/ssl_test_ctx.c", "Line": 894, "Tip": "Return <b>null</b> to caller", "SrcLines": ["", " err:", "    SSL_TEST_CTX_free(ctx);", "    ctx = NULL;", " done:", "    return ctx;", "}"], "SrcStart": 889}, {"FileMD5": "5c0f1d021ee2c8508bef1b851af6974a.c", "FileName": "test/ssl_test.c", "Line": 402, "Tip": "Function <b>SSL_TEST_CTX_create</b> executes and stores the return value to <b>test_ctx</b> (<b>test_ctx</b> can be null)", "SrcLines": ["    HANDSHAKE_RESULT *result = NULL;", "    char test_app[MAX_TESTCASE_NAME_LENGTH];", "", "    BIO_snprintf(test_app, sizeof(test_app), \"test-%d\", idx);", "", "    test_ctx = SSL_TEST_CTX_create(conf, test_app);", "    if (!TEST_ptr(test_ctx))", "        goto err;", "", "#ifndef OPENSSL_NO_DTLS"], "SrcStart": 397}, {"FileMD5": "5c0f1d021ee2c8508bef1b851af6974a.c", "FileName": "test/ssl_test.c", "Line": 507, "Tip": "<b>test_ctx</b> is used as the 1st parameter in function <b>SSL_TEST_CTX_free</b> (<b>test_ctx</b> can be null)", "SrcLines": ["    SSL_CTX_free(server_ctx);", "    SSL_CTX_free(server2_ctx);", "    SSL_CTX_free(client_ctx);", "    SSL_CTX_free(resume_server_ctx);", "    SSL_CTX_free(resume_client_ctx);", "    SSL_TEST_CTX_free(test_ctx);", "    HANDSHAKE_RESULT_free(result);", "    return ret;", "}", ""], "SrcStart": 502}, {"FileMD5": "4b377c68be4e56ea31ce7721b07a6f7f.c", "FileName": "test/ssl_test_ctx.c", "Line": 759, "Tip": "Load value from <b>ctx-&gt;expected_session_ticket_app_data</b>", "SrcLines": ["void SSL_TEST_CTX_free(SSL_TEST_CTX *ctx)", "{", "    ssl_test_ctx_free_extra_data(ctx);", "    OPENSSL_free(ctx->expected_npn_protocol);", "    OPENSSL_free(ctx->expected_alpn_protocol);", "    OPENSSL_free(ctx->expected_session_ticket_app_data);", "    sk_X509_NAME_pop_free(ctx->expected_server_ca_names, X509_NAME_free);", "    sk_X509_NAME_pop_free(ctx->expected_client_ca_names, X509_NAME_free);", "    OPENSSL_free(ctx->expected_cipher);", "    OPENSSL_free(ctx);"], "SrcStart": 754}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "test/ssl_test_ctx.c", "Line": 759}, {"HashID": "a9e8e534c1192956714cacfce45ea34e", "ReportChecker": "PSA NULL Pointer Dereference Checker", "Score": 60, "Steps": [{"FileMD5": "8c08419feb7aa31ff7b3ca8f58af3ac2.c", "FileName": "test/testutil/format_output.c", "Line": 212, "Tip": "Select the true branch at this point (<b>lz!=0</b> is true)", "SrcLines": ["    int n = bytes * 2, i;", "    char *p = out, *q = NULL;", "", "    if (bn != NULL && !BN_is_zero(bn)) {", "        hex_convert_memory(in, bytes, out, BN_OUTPUT_SIZE);", "        if (*lz) {", "            for (; *p == '0' || *p == ' '; p++)", "                if (*p == '0') {", "                    q = p;", "                    *p = ' ';"], "SrcStart": 207}, {"FileMD5": "8c08419feb7aa31ff7b3ca8f58af3ac2.c", "FileName": "test/testutil/format_output.c", "Line": 213, "Tip": "Select the false branch at this point (<b>%temp_var3</b> is false)", "SrcLines": ["    char *p = out, *q = NULL;", "", "    if (bn != NULL && !BN_is_zero(bn)) {", "        hex_convert_memory(in, bytes, out, BN_OUTPUT_SIZE);", "        if (*lz) {", "            for (; *p == '0' || *p == ' '; p++)", "                if (*p == '0') {", "                    q = p;", "                    *p = ' ';", "                    n--;"], "SrcStart": 208}, {"FileMD5": "8c08419feb7aa31ff7b3ca8f58af3ac2.c", "FileName": "test/testutil/format_output.c", "Line": 226, "Tip": "Store <b>'-' (ASCII = 45)</b> to <b>*(q)</b>", "SrcLines": ["                 * in[bytes] is defined because we're converting a non-zero", "                 * number and we've not seen a non-zero yet.", "                 */", "                if ((in[bytes] & 0xf0) != 0 && BN_is_negative(bn)) {", "                    *lz = 0;", "                    *q = '-';", "                    n++;", "                }", "            } else {", "                *lz = 0;"], "SrcStart": 221}], "Review": 80, "Time": 1630075710000, "DocID": "PE0001", "File": "test/testutil/format_output.c", "Line": 226}]}, "start": 91, "end": 96, "page": 11, "total_pages": 12, "language": "en"}